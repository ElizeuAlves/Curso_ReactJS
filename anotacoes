                    ReactJS

- Se trata de uma biblioteca que permite manipular a DOM de uma aplicação HTML;

- É muito utilizado em SPAs(Single Page Applications);

===================================================================================

- É necessário ter o NodeJS instalado para começar um projeto com o React;

- Primeiro, é instalado de forma global o pacote create-react-app:

    sudo npm install -g create-react-app

- Após a instalação, é possível criar um projeto utilizando o seguinte comando:

    create-react-app huntweb

- O comando a seguir cria a seguinte estrutura de pastas:

    node_modules -> Pasta onde irão ficar as dependências(pacotes de outros usuários) do projeto;
    public -> Todos os arquivos que o usuário final poderá acessar/usar;
    src -> Onde ficará todo o código da aplicação;
    .gitignore -> Configuração do Git para ignorar alguns arquivos;
    package.json -> Onde estarão as dependências do projeto;

- Alguns comandos estarão disponíveis após a criação do projeto. Ex:

    npm start -> Inicia a aplicação

===================================================================================

- O arquivo index.js é o primeiro arquivo aberto pela aplicação React;

- Um componente é um conjunto de parte visual(HTML), parte funcional(JavaScript) e a parte de 
estilização(CSS). Um componente é construído quando essas três partes podem ser encapsuladas
em um trecho de código;

- Todo componente tem um único método obrigatório, o método render();

===================================================================================

- Uma forma de se acessar informações de uma API é usando a biblioteca Axios;

- É possível instalar a biblioteca Axios utilizando o Yarn:

        yarn add axios

- É possível criar uma variável informando uma URL, que se trata da URL de origem de todas as
requisições:

        const api = axios.create({ baseURL: 'https://rocketseat-node.herokuapp.com/api'});

- O React possui alguns métodos que executam automaticamente, baseado no ciclo de vida de
exibição do componente em tela. Um desses métodos é o componentDidMount();

===================================================================================

- No React existe o conceito de estado, e é possível criar essa variável estado. Ex:

    state = {
        products: [],
    }

- O método render() pode depender dessas variáveis state;

- É possível escrever um trecho de código no render() que ficará "escutando" o estado das
variáveis state, e sempre que houver uma alteração, ele atualizará esta alteração na tela. Ex:

    render(){
        return <h1>Contagem de produtos: {this.state.products.length}</h1>    
    }

===================================================================================

- Para fazer a navegação, é necessário instalar uma biblioteca:

    yarn add react-router-dom
